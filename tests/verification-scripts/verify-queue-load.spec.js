/**
 * @fileoverview This Playwright script verifies that the action queue on the
 * dirt-tabulator page correctly loads its initial state from the server
 * when the page is first loaded. It checks that the queue table is populated
 * with data provided by the seed script.
 */

const { test, expect } = require('@playwright/test');
const fs = require('fs');
const path = require('path');

// Path to the temporary HTML file generated by the test:ui:prepare script
const DIRT_TABULATOR_PAGE = path.join(__dirname, '../../../jules-scratch/verification/temp_tabulator.html');

test.describe('Initial Action Queue Load Verification', () => {
  test('should load queued actions on page load', async ({ page }) => {
    // Arrange: Navigate to the local page file.
    await page.goto(`file://${DIRT_TABULATOR_PAGE}`);

    // Act: Wait for the action queue table to be populated.
    // The seed data should result in at least one item in the queue.
    // We wait for the first row to become visible in the action queue table.
    const firstQueueRow = page.locator('#action-queue-table .tabulator-row').first();
    await firstQueueRow.waitFor({ state: 'visible', timeout: 15000 });

    // Assert: Check that the queue table is indeed populated.
    await expect(firstQueueRow).toBeVisible();

    // Capture a screenshot for visual confirmation.
    const screenshotPath = path.join(__dirname, '../../../test-results/verify-queue-load.png');
    if (!fs.existsSync(path.dirname(screenshotPath))) {
        fs.mkdirSync(path.dirname(screenshotPath), { recursive: true });
    }
    await page.screenshot({ path: screenshotPath });
    console.log(`Screenshot saved to ${screenshotPath}`);
  });
});
