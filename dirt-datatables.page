Menu="dirtSettings:3"
Title="DataTables"
---
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/2.3.4/css/dataTables.dataTables.css">
<style>
    td.dt-control {
        background: url('https://datatables.net/examples/resources/details_open.png') no-repeat center center;
        cursor: pointer;
    }
    tr.dt-hasChild td.dt-control {
        background: url('https://datatables.net/examples/resources/details_close.png') no-repeat center center;
    }
    .details-table {
        width: 100%;
        border-collapse: collapse;
    }
    .details-table th, .details-table td {
        border: 1px solid #ddd;
        padding: 8px;
    }
    .details-table th {
        background-color: #f2f2f2;
    }
</style>

<table id="duplicatesTable" class="display" style="width:100%">
    <thead>
        <tr>
            <th></th>
            <th>Hash</th>
            <th>File Count</th>
            <th>Size</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<script src="https://cdn.datatables.net/2.3.4/js/dataTables.js"></script>

<script>
$(function() {
    let socket;
    let table;

    function formatChildTable(files) {
        let tableHtml = '<table class="details-table"><thead><tr><th>Path</th><th>Modified</th></tr></thead><tbody>';
        files.forEach(file => {
            tableHtml += `<tr><td>${file.path}</td><td>${new Date(file.mtime).toLocaleString()}</td></tr>`;
        });
        tableHtml += '</tbody></table>';
        return tableHtml;
    }

    function connect() {
      socket = new WebSocket(`ws://${window.location.hostname}:41820?clientId=dirt-datatables.page`);

      socket.onopen = function() {
        console.log("DataTables Tab: WebSocket connection established.");
        dirtySock('findDuplicates', null);
      };

      socket.onmessage = function(event) {
        const parsedMessage = JSON.parse(event.data);
        const { action, data } = parsedMessage;

        if (action === 'duplicateFiles') {
          console.log("DataTables Tab: Received duplicateFiles data.");
          if (table) {
            table.destroy();
          }
          table = $('#duplicatesTable').DataTable({
              data: data,
              columns: [
                  {
                      className: 'dt-control',
                      orderable: false,
                      data: null,
                      defaultContent: ''
                  },
                  { data: 'hash' },
                  { data: 'files', render: (data, type, row) => data.length },
                  { data: 'size' }
              ],
              order: [[1, 'asc']],
              language: {
                emptyTable: "No duplicate files found"
              }
          });

          // Add event listener for opening and closing details
          $('#duplicatesTable tbody').on('click', 'td.dt-control', function () {
              var tr = $(this).closest('tr');
              var row = table.row(tr);

              if (row.child.isShown()) {
                  // This row is already open - close it
                  row.child.hide();
                  tr.removeClass('dt-hasChild');
              } else {
                  // Open this row
                  row.child(formatChildTable(row.data().files)).show();
                  tr.addClass('dt-hasChild');
              }
          });
        }
      };

      socket.onclose = function(event) {
        console.log("DataTables Tab: WebSocket connection closed. Reconnecting...");
        setTimeout(connect, 1000);
      };

      socket.onerror = function(error) {
        console.error("DataTables Tab: WebSocket error: ", error);
        socket.close();
      };
    }

    function dirtySock(action, data) {
        const message = {
          clientId: "dirt-datatables.page",
          action: action,
          data: data
        };
        if (socket && socket.readyState === WebSocket.OPEN) {
          socket.send(JSON.stringify(message));
        } else {
          console.error("DataTables Tab: WebSocket is not connected.");
        }
    }

    connect();
});
</script>
